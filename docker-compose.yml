version: '3.8'

services:
  postgresql:
    image: postgres:15
    container_name: dotnet-api-postgresql
    environment:
      POSTGRES_DB: dotnet_api_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d dotnet_api_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dotnet-api-network

  redis:
    image: redis:7-alpine
    container_name: dotnet-api-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dotnet-api-network

  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: dotnet-api-dynamodb
    ports:
      - "8000:8000"
    command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-inMemory", "-optimizeDbBeforeStartup"]
    environment:
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
      AWS_DEFAULT_REGION: us-east-1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dotnet-api-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dotnet-api-dev
    ports:
      - "5000:5000"
      - "5001:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:5001;http://+:5000
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ConnectionStrings__PostgreSQL=Host=postgresql;Database=dotnet_api_dev;Username=postgres;Password=password;Port=5432
      - ConnectionStrings__DynamoDB=http://dynamodb-local:8000
      - Redis__ConnectionString=redis:6379
      - AWS__Region=us-east-1
      - AWS__AccessKeyId=local
      - AWS__SecretAccessKey=local
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
      dynamodb-local:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ~/.aspnet/https:/https:ro
    networks:
      - dotnet-api-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  dotnet-api-network:
    driver: bridge
